_________________________________table creations________
CREATE TABLE public.users (
userid SERIAL PRIMARY KEY,
username VARCHAR(255) NOT NULL UNIQUE);

CREATE TABLE public.messages (
messageid SERIAL PRIMARY KEY,
msgtext text,
senderid INT REFERENCES users(userid),
timestamp TIMESTAMP DEFAULT now());

CREATE TABLE public.received (
messageid INT REFERENCES messages(messageid) ON DELETE CASCADE,
receiverid INT REFERENCES users(userid),
seen boolean DEFAULT FALSE);
______________________________________delete function_________
CREATE FUNCTION deletemsg (msgid int)
RETURNS boolean AS $$
BEGIN
	IF 
	(SELECT * FROM public.received WHERE messageid = msgid and seen = 't') = 0
	DELETE FROM public.messages WHERE message = msgid;
	ENDIF
END;
$$
LANGUAGE plpgsql;
______________________braoadcast function_________________________
CREATE FUNCTION broadcastmsg (body text, sender int)
DECLARE 

_____________________________________queries_____________________________
SELECT * FROM public.users where userid = '........';    //GET USERS/{ID}   
SELECT * FROM public.users where username = '........'; //GET USERS/{USERNAME}

INSERT INTO public.messages (msgtext, senderid) VALUES ('...', '....');        //POST USERS/{ID}
INSERT INTO public.received (messageid, receiverid, seen) SELECT 'messageid', 'receiverid' WHERE EXISTS (SELECT * FROM public.messages WHERE messageid = messageid);       //POST USERS/{ID}
--INSERT INTO public.messages (msgtext, senderid) VALUES ('...', '....', '....');     //POST USERS/ALL  
--INSERT INTO public.received (messageid, receiverid, seen) SELECT 'messageid', 'receiverid' WHERE EXISTS (SELECT * FROM public.messages WHERE messageid = messageid);   //POST USERS/ALL  

SELECT a.messageid, b.senderid, b.timestamp from public.received a inner join public.messages b ON a.messageid = b.messageid WHERE a.receiverid = '....'; //GET USERS/{ID}/RECIEVED
UPDATE public.received SET seen = 't' WHERE receiverid = '....';      //GET USERS/{ID}/RECIEVED

SELECT messageid, timestamp FROM public.messages WHERE senderid = '....';  //GET USERS/{ID}/SENT

SELECT  a.msgtext, a.senderid, a.timestamp, b.messageid, b.receiverid, b.seen from public.messages a LEFT JOIN public.received b ON a.messageid = b.messageid WHERE a.messageid = '.....'; //GET MESSAGES/{ID}


UPDATE public.users SET username = '.....' WHERE userid = '.....'; //PUT USERS/{ID} 
INSERT INTO public.users (username) VALUES ('....');   //POST USERS/