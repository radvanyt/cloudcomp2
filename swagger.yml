swagger: "2.0"
info:
  title: Cloud Computing Exercise 2 API
  description: "A messenger can send messages to a number of recipients. The sender can ask if the message has already been read by whom. A message can be retracted if none of the recipients has already read the message."
  version: 1.0.0

schemes:
  - http
  - https

consumes:
  - application/json
produces:
  - application/json

securityDefinitions:
  basicAuth:
    type: basic

security:
  - basicAuth: []

#-------------------------------------------------------------------------------
# possible paths to use in the restful API
#-------------------------------------------------------------------------------
paths:
  /users:
    post:
      summary: create a new user
      operationId: controller.add_user
      parameters:
        - in: body
          name: user_info
          required: true
          schema:
            $ref: '#/definitions/User_insert'

      responses:
        201:
          description: Successfully created a new user (returning id)
          schema:
            type: integer
        400:
          description: Invalid request format
        401:
          description: Invalid credentials
        409:
          description: Another user with same username exists
        500:
          description: Internal Server Error

    get:
      summary: return all registered users
      operationId: controller.get_all_users
      responses:
        200:
          description: Successfully retrieved all users
          schema:
            type: array
            items:
              type: object
              properties:
                username:
                  type: string
                user_id:
                  type: integer
        400:
          description: Invalid request format
        401:
          description: Invalid credentials
        500:
          description: Internal Server Error

#-------------------------------------------------------------------------------

  /users/{user_id}:
    parameters:
      - in: path 
        name: user_id
        required: true
        type: integer

    post:
      summary: send a message to a specific user
      operationId: controller.send_message
      consumes:
        - text/plain
      parameters:
        - in: body
          name: message
          required: true
          schema:
            type: string

      responses:
        201:
          description: Message sent (returning message id)
          schema:
            type: integer
        400:
          description: Invalid request format
        401:
          description: Invalid credentials
        404:
          description: User-id not found
        500:
          description: Internal Server Error


    put:
      summary: update user info
      operationId: controller.update_user
      parameters:
        - in: body
          name: user_info
          required: true
          schema:
            $ref: '#/definitions/User_insert'
      responses:
        200:
          description: username info updated
        400:
          description: Invalid request format
        401:
          description: Invalid credentials
        404:
          description: User-id not found
        500:
          description: Internal Server Error

    get:
      summary: return user information
      operationId: controller.get_user
      responses:
        200:
          description: user info retrieved successfully
          schema:
            $ref: '#/definitions/User_return'
        400:
          description: Invalid request format
        401:
          description: Invalid credentials
        404:
          description: User-id not found
        500:
          description: Internal Server Error

#-------------------------------------------------------------------------------
  /users/{username}:
    parameters:
      - in: path 
        name: username
        required: true
        type: string
    get:
      summary: return user information
      operationId: controller.get_user_v2
      responses:
        200:
          description: user info retrieved successfully
          schema:
            $ref: '#/definitions/User_return'
        401:
          description: Invalid credentials
        404:
          description: Username not found
        500:
          description: Internal Server Error

#-------------------------------------------------------------------------------
  /users/all:
    post:
      summary: send a message to all the users
      operationId: controller.broadcast_message
      consumes:
        - text/plain
      parameters:
        - in: body
          name: message
          required: true
          schema:
            type: string
      responses:
        201:
          description: Message sent to all users (returning message id)
          schema:
            type: integer
        400:
          description: Invalid request format
        401:
          description: Invalid credentials
        500:
          description: Internal Server Error

#-------------------------------------------------------------------------------

  /users/{user_id}/received:
    get:
      summary: retrieve all messages received by given user
      operationId: controller.get_received_messages
      parameters:
        - in: path 
          name: user_id
          required: true
          type: integer
      responses:
        200:
          description: Successfully retrieved all received messages
          schema:
            type: array
            items:
              $ref: '#/definitions/Message'
        401:
          description: Invalid credentials (must be logged with same user as {user_id})
        404:
          description: User-id not found
        500:
          description: Internal Server Error
#-------------------------------------------------------------------------------

  /users/{user_id}/sent:
    get:
      summary: retrieve all messages sent by given user
      operationId: controller.get_sent_messages
      parameters:
        - in: path 
          name: user_id
          required: true
          type: integer
      responses:
        200:
          description: Successfully retrieved all sent messages
          schema:
            type: array
            items:
              $ref: '#/definitions/Message'
        401:
          description: Invalid credentials (must be logged with same user as {user_id})
        404:
          description: User-id not found
        500:
          description: Internal Server Error

#-------------------------------------------------------------------------------

  /messages/{message_id}:
    parameters:
      - in: path 
        name: message_id
        required: true
        type: integer

    get:
      summary: retrieve a message detail information
      operationId: controller.get_message
      responses:
        200:
          description: Successfully retrieved message's info
          schema:
            $ref: '#/definitions/Message'
        401:
          description: Invalid credentials (must be logged as either a {message_id} receiver or the sender)
        404:
          description: Message-id not found
        500:
          description: Internal Server Error

    delete:
      summary: delete a message (if nobody has read it)
      operationId: controller.delete_message
      responses:
        200:
          description: Successfully deleted the message
        401:
          description: Invalid credentials (must be logged as either the message receiver or sender)
        404:
          description: Message-id not found
        500:
          description: Internal Server Error
#-------------------------------------------------------------------------------


#-------------------------------------------------------------------------------
# API's models
#-------------------------------------------------------------------------------
definitions:
  User_insert:
    type: object
    required:
      - username
      - password
    properties:
      username:
        type: string
      password:
        type: string

  User_return:
    type: object
    required:
      - username
    properties:
      id:
        type: integer
      username:
        type: string

  Message:
    type: object
    required:
      - message_id
      - sender_id
      - timestamp
    properties:
      message_id: 
        type: integer
      message_text:
        type: string
      sender_id:
        type: integer
      timestamp:
        type: string
        format: date-time
      message_read:
        type: array
        items:
          type: object
          required:
            - receiver_id
            - message_read
          properties:
            receiver_id:
              type: integer
            message_read:
              type: boolean
